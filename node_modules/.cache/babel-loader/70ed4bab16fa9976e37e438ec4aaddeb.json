{"ast":null,"code":"import _regeneratorRuntime from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/src/components/App/index.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport Home from \"../V1Home\";\nimport TronLinkGuide from \"../TronLinkGuide\";\nimport cons from \"../../cons\";\nimport abiToken from \"../../token\";\nimport abiBinario from \"../../binary\";\nvar addressToken = \"0xd5881b890b443be0c609BDFAdE3D8cE886cF9BAc\";\nvar addressBinary = \"0xEC836b3F0fa7BF1579ab32C57A4e7dee971ccDcE\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      admin: false,\n      metamask: false,\n      conectado: false,\n      currentAccount: null,\n      binanceM: {\n        web3: null,\n        contractToken: null,\n        contractBinary: null\n      }\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var resultado, web3, contractToken, contractBinary, isAdmin;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(typeof window.ethereum !== 'undefined')) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 3;\n                return window.ethereum.request({\n                  method: 'eth_requestAccounts'\n                });\n\n              case 3:\n                resultado = _context.sent;\n                console.log(resultado[0]);\n                this.setState({\n                  currentAccount: resultado[0],\n                  metamask: true,\n                  conectado: true\n                });\n                _context.next = 10;\n                break;\n\n              case 8:\n                this.setState({\n                  metamask: false\n                });\n                alert(\"No metamask\");\n\n              case 10:\n                try {\n                  web3 = new Web3(window.web3.currentProvider); // mainet... metamask\n\n                  contractToken = new web3.eth.Contract(abiToken, addressToken);\n                  contractBinary = new web3.eth.Contract(abiBinario, addressBinary);\n                  isAdmin = true; //await contractBinary.methods.admin(this.state.currentAccount).call({from:this.state.currentAccount});\n\n                  this.setState({\n                    admin: isAdmin,\n                    binanceM: {\n                      web3: web3,\n                      contractToken: contractToken,\n                      contractBinary: contractBinary\n                    }\n                  }); //web3 = new Web3(new Web3.providers.HttpProvider(\"https://data-seed-prebsc-1-s1.binance.org:8545/\"));\n                } catch (error) {\n                  alert(error);\n                }\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getString = \"\";\n      var loc = document.location.href; //console.log(loc);\n\n      if (loc.indexOf('?') > 0) {\n        getString = loc.split('?')[1];\n        getString = getString.split('#')[0];\n      }\n\n      if (!this.state.metamask) return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TronLinkGuide, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      })));\n      if (!this.state.conectado) return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TronLinkGuide, {\n        installed: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      })));\n\n      switch (getString) {\n        case \"v1\":\n        case \"V1\":\n          return /*#__PURE__*/React.createElement(Home, {\n            admin: this.state.admin,\n            contractAddress: cons.SC2,\n            version: \"3\",\n            wallet: this.state.binanceM,\n            currentAccount: this.state.currentAccount,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 16\n            }\n          });\n\n        case \"v2\":\n        case \"V2\":\n          return /*#__PURE__*/React.createElement(Home, {\n            admin: this.state.admin,\n            contractAddress: cons.SC2,\n            version: \"3\",\n            wallet: this.state.binanceM,\n            currentAccount: this.state.currentAccount,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 16\n            }\n          });\n\n        case \"shasta\":\n        case \"test\":\n        case \"v0\":\n        case \"V0\":\n          return /*#__PURE__*/React.createElement(Home, {\n            admin: this.state.admin,\n            contractAddress: cons.SCtest,\n            version: \"999\",\n            wallet: this.state.binanceM,\n            currentAccount: this.state.currentAccount,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 16\n            }\n          });\n\n        default:\n          return /*#__PURE__*/React.createElement(Home, {\n            admin: this.state.admin,\n            contractAddress: cons.SC2,\n            version: \"3\",\n            wallet: this.state.binanceM,\n            currentAccount: this.state.currentAccount,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 16\n            }\n          });\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // {tWeb()}","map":{"version":3,"sources":["/Users/miguelmerchan/Documents/GitHub/6-Leidy2/src/components/App/index.js"],"names":["React","Component","Web3","Home","TronLinkGuide","cons","abiToken","abiBinario","addressToken","addressBinary","App","props","state","admin","metamask","conectado","currentAccount","binanceM","web3","contractToken","contractBinary","window","ethereum","request","method","resultado","console","log","setState","alert","currentProvider","eth","Contract","isAdmin","error","getString","loc","document","location","href","indexOf","split","SC2","SCtest"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Web3 from \"web3\";\n\nimport Home from \"../V1Home\";\nimport TronLinkGuide from \"../TronLinkGuide\";\nimport cons from \"../../cons\"\n\nimport abiToken from \"../../token\";\nimport abiBinario from \"../../binary\";\n\nconst addressToken = \"0xd5881b890b443be0c609BDFAdE3D8cE886cF9BAc\";\nconst addressBinary = \"0xEC836b3F0fa7BF1579ab32C57A4e7dee971ccDcE\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      admin: false,\n      metamask: false,\n      conectado: false,\n      currentAccount: null,\n      binanceM:{\n        web3: null,\n        contractToken: null,\n        contractBinary: null\n      }\n      \n    };\n  }\n\n  async componentDidMount() {\n\n      if (typeof window.ethereum !== 'undefined') {           \n        var resultado = await window.ethereum.request({ method: 'eth_requestAccounts' });\n          console.log(resultado[0]);\n          this.setState({\n            currentAccount: resultado[0],\n            metamask: true,\n            conectado: true\n          })\n\n      } else {          \n        this.setState({\n          metamask: false\n        })      \n          alert(\"No metamask\")\n      }\n\n    try {         \n      var web3 = new Web3(window.web3.currentProvider);// mainet... metamask\n      var contractToken = new web3.eth.Contract(\n        abiToken,\n        addressToken\n      );\n      var contractBinary = new web3.eth.Contract(\n        abiBinario,\n        addressBinary\n      );\n      var isAdmin = true;//await contractBinary.methods.admin(this.state.currentAccount).call({from:this.state.currentAccount});\n\n      this.setState({\n        admin: isAdmin,\n        binanceM:{\n          web3: web3,\n          contractToken: contractToken,\n          contractBinary: contractBinary\n        }\n      })\n      //web3 = new Web3(new Web3.providers.HttpProvider(\"https://data-seed-prebsc-1-s1.binance.org:8545/\"));\n    } catch (error) {\n        alert(error);\n    }  \n\n    \n     \n    \n  }\n\n\n  render() {\n\n    var getString = \"\";\n    var loc = document.location.href;\n    //console.log(loc);\n    if(loc.indexOf('?')>0){\n              \n      getString = loc.split('?')[1];\n      getString = getString.split('#')[0];\n\n    }\n\n    if (!this.state.metamask) return (\n      <>\n        <div className=\"container\">\n          <TronLinkGuide />\n        </div>\n      </>\n      );\n\n    if (!this.state.conectado) return (\n      <>\n        <div className=\"container\">\n          <TronLinkGuide installed />\n        </div>\n      </>\n      );\n\n    switch (getString) {\n      case \"v1\": \n      case \"V1\": \n        return(<Home admin={this.state.admin} contractAddress={cons.SC2} version=\"3\" wallet={this.state.binanceM} currentAccount={this.state.currentAccount}/>);\n      case \"v2\":\n      case \"V2\": \n        return(<Home admin={this.state.admin} contractAddress={cons.SC2} version=\"3\" wallet={this.state.binanceM} currentAccount={this.state.currentAccount}/>);\n      case \"shasta\":\n      case \"test\":\n      case \"v0\":\n      case \"V0\": \n        return(<Home admin={this.state.admin} contractAddress={cons.SCtest} version=\"999\" wallet={this.state.binanceM} currentAccount={this.state.currentAccount}/>);\n      default:\n        return(<Home admin={this.state.admin} contractAddress={cons.SC2} version=\"3\" wallet={this.state.binanceM} currentAccount={this.state.currentAccount}/>);\n    }\n\n\n  }\n}\nexport default App;\n\n// {tWeb()}\n"]},"metadata":{},"sourceType":"module"}